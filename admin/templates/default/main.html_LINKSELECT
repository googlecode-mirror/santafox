<html>
<head>
<title>Админка...</title>
<meta http-equiv="Content-Type" content="text/html; charset=[#set_charset#]">

<script type="text/javascript" src="/admin/js/jquery-1.4.4.min.js"></script>
<script type="text/javascript" src="/admin/js/jquery-ui-1.8.7.custom.min.js"></script>
<script type="text/javascript" src="/admin/js/jquery.linkselect.js"></script>

<link rel="stylesheet" type="text/css" href="/admin/templates/default/css/css.css" />
<link rel="stylesheet" type="text/css" href="/admin/templates/default/css/accordion.css" />
<link rel="stylesheet" type="text/css" href="/admin/templates/default/css/jquery-ui-1.8.7.custom.css" />

<link type="text/css" href="/admin/templates/default/css/jquery.linkselect.css" rel="stylesheet" title="default" media="all" />
<link type="text/css" href="/admin/templates/default/css/jquery.linkselect.style.select.css" rel="alternate stylesheet" title="select" media="all" />



<!--
<link rel="stylesheet" type="text/css" href="/components/extjs/resources/css/ext-all.css" />
-->

<!--Добавим класс для редактора контента-->
<script type="text/javascript" src="/components/html_editor/tiny_mce.js"></script>
<script type="text/javascript" src="/components/html_editor/plugins/tinybrowser/tb_tinymce.js.php"></script>
<script type="text/javascript" src="/components/syntax/edit_area_full.js" language="Javascript" ></script>
<script type="text/javascript" src="/admin/js/main_interface.js"></script>


</head>

<body>

	<!-- Контейнер для дебаг информации -->
	<div id="debug_div"  style="display:none;"></div>
	<div id="debug_content" style="display:none;">[#debug_content#]</div>

	<div id="console_div"  style="display:none;"></div>
	<div id="console_content"  style="display:none;"></div>


	<!-- Верхний блог с шапкой и главным меню -->
	<div id="north" style="padding:0; margin:0;height:80px;">
        <table border="0" cellpadding="0" cellspacing="0" width="100%" class="santafox_main_logo_nort">
          <tr height="38">
            <td class="main-header" align="left"  height="38"><span style="padding-left: 15px;">[#server#]&nbsp;<img src="/admin/templates/default/images/edit_name.gif" width="102" height="10"/></span></td>
            <td class="main-header" align="right"><span style="padding-right: 20px;"><img src="/admin/templates/default/images/santa_logo.gif" width="101" height="18"/></span>

            </td>
          </tr>
          <tr height="38"><td height="38" colspan="2">[#main_menu#]</td></tr>
        </table>
	</div>

    <br clear="all" />


    <!-- Слой с контентом отображаемым в текущей секции и в текущем меню
    	Используется для формирования контента при обновлении страницы по F5-->
    <div id="current_content" style="width:100%;border:1px solid black;">

        <div id="modules_toolbar" style="width:100%;height:30px;border:1px solid black;">
            modules_toolbar
     <select id="modules_toolbar2">
    <option>111</option>
    <option>222</option>
</select>
        </div>
        <br clear="all" />

        <div style="width:100%;">
        <div id="west" style="min-height:200px;width:200px;overflow: auto;float:left;display:inline;border:1px solid black;">
            west
        </div>
        <!-- Слой для формирования панели инструментов выбора админки модуля -->
        <div id="content" style="top:0;background-color:#006666;float:left;display:inline;overflow: auto; height: 100%; width: 200px; ">
            CONTENT<br><br><br><br>
            CONTENT<br><br><br><br>
            CONTENT<br><br><br><br>
            CONTENT<br><br><br><br>
            CONTENT<br><br><br><br>
            CONTENT<br><br><br><br>
            CONTENT<br><br><br><br>
            CONTENT<br><br><br><br>
            CONTENT<br><br><br><br>
            CONTENT<br><br><br><br>
            CONTENT<br><br><br><br>
            CONTENT<br><br><br><br>
            CONTENT<br><br><br><br>
            CONTENT<br><br><br><br>
            CONTENT<br><br><br><br>
            CONTENT<br><br><br><br>
            CONTENT<br><br><br><br>
            CONTENT<br><br><br><br>

        </div>
            <!-- Слой с контентом помощи -->
            <div id="help_content" class="div-help" style="display:inline;float:right;width:15px;"><br>h<br>e<br>l<br>p<br></div>
        </div>

        <br clear="all" />
        <!-- Нижний блок с постоянной информационной строкой -->
        <div id="south" style="height:18px;width:100%;bottom:0;position:fixed;z-index:999;background-color:white;">
          <table width="100%" height="100%" cellpadding="0" cellspacing="0" border="0">
            <tr>
              <td>Активных администраторов: <a href="#" onClick="start_interface.main_menu_click(this, 'polzovateli');">%admins_count%</a></td>
              <td width="20">|</td>
              <td><span id="link_for_debug" onClick = "start_interface.show_debug_info(this)" style="color:#CCCCCC">Дебаг</span></td>
              <td>&nbsp;</td>
              <td width="20">|</td>
              <td style="color: #999999">Версия: [#curent_version#]&nbsp;&nbsp;&nbsp;[#version_update#]</td>
              <td width="20">|</td>
              <td align="right"><div id="curent_time" style="color:#000000; padding-top:2px; padding-right:10px;"></div></td>
            </tr>
          </table>
        </div>
    </div>




    <!-- Слой для контента каких-то всплывающих окон -->
    <div id="ext_layout" style="display:none;"></div>

    <!-- Слой для окна редактирования/создания нового действия -->
    <div id="action_edit" style="display:none;"></div>




    <div id="autoTabs" style="display:none;"></div>





<!-- Ещё подгружаем скрипт, в котором все настройки всего оконного интерфейса -->
<script type="text/javascript">
	var message_debug = new Array();
	var start_interface = function(){
	        return {
				global_link: "index.php?action=set_left_menu&leftmenu=",
				array_name_edit_content: Array(),
	        	layout : null,
	        	innerLayout : null,
				main_menu_element_select: null,
				left_menu_element_select: null,
				modules_element_select: null,
				left_menu: null,
				toolbar: null,
				dialog: null,
				console_dialog: null,
				actiondialog: null,
				select_node : null,
				select_element : null, // Содержит ссылку на элементы формы, который сейчас редактируется,
				//использыется при вводе значений свойств, выбираемых в отдельном диалоговом окне. до вызова этого
				//окна сюда помещается объект поля, вызвашего окно

				//Функции перегружает контент западного и центрального региона
				//для соответствующего пункта меню
				main_menu_click:function(el, name_section, name_left_menu)
				{
					//Выберем все элементы и проставим им обычный класс
					//а текущему элементу проставим класс того что он выбрна
					if (this.main_menu_element_select != null /*&& this.main_menu_element_select.hasClass('main_menu_select')*/)
                    {
                        this.main_menu_element_select.switchClass('main_menu_select','main_menu');
                    }
						//Ext.get(this.main_menu_element_select).replaceClass('main_menu_select', 'main_menu');

					//Кроме того, если надо, выключим подсветку админки модуля с которой мы могли перейти на
					//главное меню
					if (this.modules_element_select != null)
						this.modules_element_select.toggle(false);

					//Ext.get(el).replaceClass('main_menu', 'main_menu_select');
					el.switchClass('main_menu','main_menu_select');
					this.main_menu_element_select = el;

					//Теперь необходимо обновить контент левой части меню
					if (name_left_menu)
					{
						//Это прямое позиционирование на элемент меню в секции
                        /*
						this.innerLayout.getRegion('west').getActivePanel().getUpdateManager().update({
							url: "index.php?section=" + name_section + "&action=get_left_menu"
							, scope: this
							, discardUrl: false
							, nocache: false
							, timeout: 30
							, scripts: true
							, callback: function (oElement, bSuccess, oResponse)
								{
									if (bSuccess)
									{
										//Значит меню загрузилось и имитируем клик по нему
										this.left_menu_click(document.getElementById(name_left_menu,''))
									}
								}
						});
						*/
                         $("#west").load("index.php?section=" + name_section + "&action=get_left_menu", function(response, status, xhr) {
                              if (status != "error")
                              {
                                  this.left_menu_click(document.getElementById(name_left_menu,''))
                              }
                         });

					}
					else
					{
						//Это обычный клик в админке
                        /*
						this.innerLayout.getRegion('west').getActivePanel().getUpdateManager().update({
							url: "index.php?section=" + name_section + "&action=get_left_menu"
							, scope: this
							, discardUrl: false
							, nocache: false
							, timeout: 30
							, scripts: true
						});
						*/
                        santaUpdateRegion('west',"index.php?section=" + name_section + "&action=get_left_menu");
					}

					return true;
				},

				//Убирает ывделение текущего ппункта меню со всего меню
				left_menu_clear_select:function()
				{
					//if (this.left_menu_element_select != null)
					//	Ext.get(this.left_menu_element_select).replaceClass('left_menu_select', 'left_menu');
					if (this.left_menu_element_select != null)
						this.left_menu_element_select.switchClass('left_menu_select','left_menu');
				},

				//Запоминает ссылку на текущаю выделенную ноду
				//Что бы при пклике по левому пункту меню снять с неё выделение
				save_link_node_select:function(el)
				{
					this.select_node = el;
				},

				//Загрузка контента при клике по левому элементу меню
				left_menu_click:function(el, query)
				{
					//Прежде проверим, может есть дерево и при клике
					//по пункту левого меню нужно убрать выделение с текущей ноды
					//alert(this.select_node);
					if (this.select_node != null)
						this.select_node.unselect();

					//Выберем все элементы и проставим им обычный класс
					//а текущему элементу проставим класс того что он выбрна
					if (this.left_menu_element_select != null)
						this.left_menu_element_select.switchClass('left_menu_select', 'left_menu');
						//Ext.get(this.left_menu_element_select).replaceClass('left_menu_select', 'left_menu');

                    //http://www.pedrocorreia.net/mySnippets/javascript/jQuery-Switch-Replace-Change-Class-Name


					//Ext.get(el).replaceClass('left_menu', 'left_menu_select');
					el.switchClass('left_menu', 'left_menu_select');
					this.left_menu_element_select = el;

					//Теперь необходимо обновить контент центральной части
                    /*
					this.innerLayout.getRegion('center').getActivePanel().getUpdateManager().update({
						url: this.global_link + el.id + '&' + query
						, scope: this
						, discardUrl: false
						, nocache: false
						, timeout: 30
						, scripts: true
					});
					*/
                    santaUpdateRegion('center', this.global_link + el.id + '&' + query);
                    /*
					this.innerLayout.getRegion('east').getActivePanel().getUpdateManager().update({
						url: "index.php?action=get_help_content"
						, scope: this
						, discardUrl: false
						, nocache: false
						, timeout: 30
						, scripts: true
					});
                    */
                    santaUpdateRegion('east', "index.php?action=get_help_content");

					return true;

				},
				//Функция производит перезагрузку центральной области контента
				//А теперь загрузим контент в нужную часть

				link_go : function(str_link){

                    /*
					var str = this.global_link + str_link;
					this.innerLayout.getRegion('center').getActivePanel().getUpdateManager().update({
						url: str
						, scope: this
						, discardUrl: false
						, nocache: false
						, timeout: 30
						, scripts: true
					});
					*/
                    santaUpdateRegion('center', this.global_link + str_link);

				},
				// index.php?section=asd&action=set_left_menu&leftmenu=active_admins
				sub_select : function(section, leftmenu){

				},

				// Функция для формирования дебага
				show_console_info: function(content_console) {

					//var str_html = Ext.get("console_content").dom.innerHTML;
					var str_html = $("#console_content").html();
					if ((content_console.length <= 0) && (str_html == ""))
						return false;

					//Выводит информацию для дебага, если она есть
					if (this.console_dialog == null)
					{
						this.console_dialog = new Ext.LayoutDialog("console_div", {
								modal:false,
								width:400,
								height:200,
								shadow:false,
								minWidth:200,
								minHeight:100,
								proxyDrag: false,
								center: {
									autoScroll:true,
									tabPosition: 'top',
									closeOnTab: true,
									alwaysShowTabs: false
								}
						});
						this.console_dialog.addKeyListener(27, this.console_dialog.hide, this.console_dialog);
						//dialog.addButton('Submit', dialog.hide, dialog);
						this.console_dialog.addButton('Close', this.console_dialog.hide, this.console_dialog);

						var c_layout = this.console_dialog.getLayout();
						c_layout.beginUpdate();
						c_layout.add('center', new Ext.ContentPanel('console_content', {title: 'Console'}));
						c_layout.endUpdate();
					}
					//Теперь проверим, если есть новые сообщения об ошибках
					//то добавим их в начало


					if (str_html.length>500)
					 str_html = str_html.substr(0,500);
					//Выведем информацию с дебагами

					str_html = "" + content_console + "<br>" + str_html;
					message_debug = Array();
					//Ext.get("console_content").update(str_html);
					$("#console_content").html(str_html);
					this.console_dialog.show();
				},

				show_debug_info : function(elmenu) {

					//var str_html = Ext.get("debug_content").dom.innerHTML;
					var str_html = $("#debug_content").html();
					if ((message_debug.length <= 0) && (str_html == ""))
						return false;

					//Выводит информацию для дебага, если она есть
					//if (this.dialog == null){ // lazy initialize the dialog and only create it once
						this.dialog = new Ext.LayoutDialog("debug_div", {
								modal:false,
								width:600,
								height:400,
								shadow:false,
								minWidth:300,
								minHeight:300,
								proxyDrag: false,
								center: {
									autoScroll:true,
									tabPosition: 'top',
									closeOnTab: true,
									alwaysShowTabs: false
								}
						});
						this.dialog.addKeyListener(27, this.dialog.hide, this.dialog);
						//dialog.addButton('Submit', dialog.hide, dialog);
						this.dialog.addButton('Close', this.dialog.hide, this.dialog);

						//var debug_layout = this.dialog.getLayout();
						//debug_layout.beginUpdate();
						//debug_layout.add('center', new Ext.ContentPanel('debug_content', {title: 'Дебаг'}));
						//debug_layout.endUpdate();
					//}
					//Теперь проверим, если есть новые сообщения об ошибках
					//то добавим их в начало

					//Выведем информацию с дебагами
					if (message_debug.length > 0 )
					{

						str_html = "" + message_debug.join("") + "" + str_html;
						message_debug = Array();
						Ext.get("debug_content").update(str_html);
					}
					this.dialog.show();
				},


				modules_tab_click: function (select_item, parent_item){

					//По способу загрузки очень похоже на то, как обрабатывается главное меню
					//Нужно сделать неактивным пункт главного меню
					if (this.main_menu_element_select != null)
						Ext.get(this.main_menu_element_select).switchClass('main_menu_select', 'main_menu');

					//Если нужно, отключим сделаем неактивным придыдущее меню модулей
					if (this.modules_element_select != null)
						this.modules_element_select.toggle(false);

					//Проверим, может это выбра дочерний модуль
					if (parent_item != null)
					{
						//Значит это вызов из под меню, и в родетля надо прописать
						//параметры под меню, что бы они потом вызывлись
						parent_item.setText(select_item.text);
						parent_item.moduleid = select_item.moduleid;
						parent_item.toggle(true);
						this.modules_element_select = parent_item;
					} else
					{
						select_item.toggle(true);
						this.modules_element_select = select_item;
					}

					//Ну и теперь обновим левое меню
                    /*
					this.innerLayout.getRegion('west').getActivePanel().getUpdateManager().update({
						url: "index.php?section=" + select_item.moduleid + "&action=get_left_menu"
						, scope: this
						, discardUrl: false
						, nocache: false
						, timeout: 30
						, scripts: true
					});
					*/
                    santaUpdateRegion('west', "index.php?section=" + select_item.moduleid + "&action=get_left_menu");

					return true;
				},


				init : function(){

                    //alert('startinterface.init();');
/*
* $("#id").linkselect("open")
Opens the Linkselect's dropdown menu.

$("#id").linkselect("close")
Closes the Linkselect's dropdown menu.
*/

                    $("#modules_toolbar2").linkselect();
                    var options1 = [
                          {value: 1, text: "Option 1"}
                        , {value: 2, text: "Option 2"}
                        , {value: 3, text: "Option 3", selected: true}
                        , {value: 4, text: "Option 4"}
                        , {value: 5, text: "Option 5"}
                    ];
                    $("#modules_toolbar2").linkselect("replaceOptions", options1, false);
                    $("#west").resizable({
                        maxWidth: 400,
                        minWidth: 200
                    });

                    /*
                    $("#modules_toolbar2").linkselect({
                        change: function (li, value, text){
                            $('<div>' + value + ' | ' + text + '</div>').appendTo("#change_log");
                        }
                    });
                    */


					//Создаём тул бар для севера
					//в котором выбираются доступные админки модулей
					//this.toolbar = new Ext.Toolbar('main-tb');
                    // @todo здесь табы модулей
				    //[#modules_menus_tabs#]

                    /*
                    var options1 = [
                          {value: 1, text: "Option 1"}
                        , {value: 2, text: "Option 2"}
                        , {value: 3, text: "Option 3", selected: true}
                        , {value: 4, text: "Option 4"}
                        , {value: 5, text: "Option 5"}
                    ];

                    //$("#modules_toolbar2").linkselect("replaceOptions", options1, false);

                    var v1=$("#modules_toolbar2");
                    v1.linkselect("replaceOptions", options1, false);
*/


					//Сначала настравиваем вложенные регионы...
					//На север натягиваем панельку тул баров на весь экран
					//this.innerLayout.beginUpdate();

                    /*
					this.innerLayout.add("north", new Ext.ContentPanel(cview, {
					 	adjustments : [0, 0]
					  	, autoCreate : true
					  	, autoScroll : false
					  	, background : false
					  	, closable : false
					  	, fitContainer : false
					  	, fitToFrame : true
					  	, loadOnce : false
					  	, params : null
						, resizeEl : 'cbody'
					  	, title : 'The title for this panel'
					  	, toolbar : this.toolbar
					  	, url : null
				       }));
				       */

					//Контент основная нижня часть с контентом
                    /*
					this.innerLayout.add("center", new Ext.ContentPanel('current_content', {
					 	adjustments : [0, 0]
					  	, autoCreate : true
					  	, autoScroll : false
					  	, background : false
					  	, closable : false
					  	, fitContainer : false
					  	, fitToFrame : false
					  	, loadOnce : false
					  	, params : null
						, resizeEl : null
					  	, title : 'The title for this panel'
					  	, toolbar : null
					  	, url : null
				       }));
				       */


					//---------- Создание левой менюшки -------------------
					//Создадим панель аккордиона для левой менюшки (в слое левой менюшки)
                    /*
					this.left_menu = new Ext.ux.Accordion('menu_left', {
								    fitHeight: false
								   ,resizable: false
							       ,fitContainer: true
								   ,fitToFrame: true
								   ,useShadow: false
								   ,draggable: false
								   ,independent: true
								   ,expanding: true
								   ,adjustments: [ 0, -26 ]

								});
					this.left_menu.expandAll();
					*/


					//Навесим див с левой менюшкой на соответсвующий регион
                    /*
					this.innerLayout.add("west", new Ext.ContentPanel('menu_left', {
					 	adjustments : [0, 0]
					  	, autoCreate : true
					  	, autoScroll : false
					  	, background : false
					  	, closable : false
					  	, fitContainer : false
					  	, fitToFrame : true
					  	, loadOnce : false
					  	, params : null
						, resizeEl : null
					  	, toolbar : null
					  	, url : null
				       }));
					//---------- Создание левой менюшки -------------------
					*/

                    /*
					this.innerLayout.add("east", new Ext.ContentPanel('help_content', {
					 	adjustments : [0, 0]
					  	, autoCreate : true
					  	, autoScroll : false
					  	, background : false
					  	, closable : false
					  	, fitContainer : false
					  	, fitToFrame : true
					  	, loadOnce : false
					  	, params : null
						, resizeEl : null
					  	, title : 'Помощь к разделу'
					  	, toolbar : null
					  	, url : null
				       }));

					this.innerLayout.endUpdate();
					*/

					//Теперь добавляем инофрмацию по основным регионам
                    /*
					this.layout.beginUpdate();
					this.layout.add("north", new Ext.ContentPanel("north"));
					this.layout.add("south", new Ext.ContentPanel("south", {title: "South", closable: true}));
	                this.layout.add('center', new Ext.NestedLayoutPanel(this.innerLayout, {
					   	adjustments : [0, 0]
					  	, autoCreate : true
					  	, autoScroll : true
					  	, background : false
					  	, closable : false
	                	}
					));

					this.layout.endUpdate();
					fulltime();
*/

					//Обновление контента левой, и центральной части, значение секции не указывается
					//так, как оно берётся из сессии либо по умолчанию
					//Такой вызов необходим что бы при первом построении страницы (или при её обновлении
					//через F5 подгрузился весь контент
					update_left_menu("[#get_url#]");
					//this.edit_content = new TinyMCE_Engine();
					//Ext.example.init();
				}
	     };
	}();
	//Компанент для формирования небольших всплывающих подсказок
    /*
	Ext.example = function(){
	    var msgCt;

    	function createBox(t, s){
        	return ['<div class="msg">',
            	    '<div class="x-box-tl"><div class="x-box-tr"><div class="x-box-tc"></div></div></div>',
                	'<div class="x-box-ml"><div class="x-box-mr"><div class="x-box-mc"><h3>', t, '</h3>', s, '</div></div></div>',
	                '<div class="x-box-bl"><div class="x-box-br"><div class="x-box-bc"></div></div></div>',
    	            '</div>'].join('');
	    }
		return {
        	msg : function(title, format){
            	if(!msgCt){
	                msgCt = Ext.DomHelper.insertFirst(document.body, {id:'msg-div'}, true);
    	        }
        	    msgCt.alignTo(document, 't-t');
	            var s = String.format.apply(String, Array.prototype.slice.call(arguments, 1));
    	        var m = Ext.DomHelper.append(msgCt, {html:createBox(title, s)}, true);
        	    m.slideIn('t').pause(1).ghost("t", {remove:true});
	        },

    	    init : function(){
        	    var s = Ext.get('extlib'), t = Ext.get('exttheme');
	            if(!s || !t){ // run locally?
    	            return;
        	    }
            	var lib = Cookies.get('extlib') || 'ext',
	                theme = Cookies.get('exttheme') || 'aero';
    	        if(lib){
        	        s.dom.value = lib;
	            }
    	        if(theme){
        	        t.dom.value = theme;
            	    Ext.get(document.body).addClass('x-'+theme);
	            }
    	        s.on('change', function(){
        		    Cookies.set('extlib', s.getValue());
	                setTimeout(function(){
    	                window.location.reload();
        	        }, 250);
            	});

	            t.on('change', function(){
    	            Cookies.set('exttheme', t.getValue());
        	        setTimeout(function(){
    	                window.location.reload();
	                }, 250);
        	    });
	        }
	    };
	}();
*/
	//Ext.EventManager.onDocumentReady(start_interface.init, start_interface, true);
    $(function() {
        start_interface.init();
    });


	//Функция для обновления текущего времени на сайте и проверки необходимости отображения
	//окна с дебагом
	function fulltime() {
		var time = new Date();
		$('#curent_time').html(time.toLocaleString());

		//Заодно проверим, нужно ли показывать дебаг
		//var str_html = Ext.get("debug_content").dom.innerHTML;
		var str_html = $("#debug_content").html();
		if ((message_debug.length > 0) || (str_html != ""))
        {
			//Ext.get("link_for_debug").setStyle({color: "#FF0000", cursor:"HAND"});
			$("#link_for_debug").css("color", "#FF0000").css("cursor","HAND");
        }
		else
			//Ext.get("link_for_debug").setStyle({color: "#CCCCCC", cursor:""});
			$("#link_for_debug").css("color", "#CCCCCC").css("cursor","");

		setTimeout('fulltime()',500)
	}
	</script>
<script type="text/javascript">

	//Функции для вызова редактора контента внутри админок модулей
		tinyMCE.init({
		//Общие настройки
		mode : "none",
		theme : "advanced",
		apply_source_formatting : true,
		language : "ru",
		docs_language : "ru",
		focus_alert : false,
		auto_resize : false,
		object_resizing : true,
		dialog_type : "modal",
		content_css : "/design/css/css.css",
		relative_urls : false,
		//convert_urls : true,
		file_browser_callback : 'tinyBrowser',

		//Настройки используемых плагинов
		plugins : "safari,spellchecker,pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template",

		//настройка панель инструментов
	theme_advanced_buttons1 : "save,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,|,styleselect,formatselect,fontselect,fontsizeselect",
	theme_advanced_buttons2 : "cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,|,forecolor,backcolor",
	theme_advanced_buttons3 : "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,iespell,media,advhr,|,code",
	//theme_advanced_buttons4 : "insertlayer,moveforward,movebackward,absolute,|,styleprops,|,cite,abbr,acronym,del,ins,attribs,nonbreaking",
	theme_advanced_toolbar_location : "top",
	theme_advanced_toolbar_align : "left",
	theme_advanced_statusbar_location : "bottom",
	theme_advanced_resizing : false,
	theme_advanced_resize_horizontal : false,





		//for insertdatetime
		plugin_insertdate_dateFormat : "%d.%m.%Y",
		plugin_insertdate_timeFormat : "%H:%M:%S"

		});
</script>
</body>
</html>